#!/bin/bash
#------------------------------------------------------------------------------
# License
#
#    Copyright (C) 2020-24 FS Dynamics Portugal (FSD blueCAPE Lda)
#
#    This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#    For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#    This file is a derivative work of OpenFOAM.
#
#    OpenFOAM is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#    for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     wmakeListAllIncludedLibraries
#
# Description
#     Script for listing libraries that should be listed to be included.
#
#   NOTE: this script was partially based on the wmake script.
#
# Usage
#     wmakeListAllIncludedLibraries
#
#------------------------------------------------------------------------------
Script=${0##*/}

#
# Check environment variables
#
for check in WM_OPTIONS WM_LINK_LANGUAGE WM_DIR WM_PROJECT WM_PROJECT_DIR
do
    eval test "\$$check" || {
        echo "$Script error: environment variable \$$check not set" 1>&2
        exit 1
    }
done

if [ $(cat Make/options | wc -l) -eq 0 ]
then
    echo "WARNING: Make/options is empty."
    exit 0
fi

CODE=0

EXE_INC=$(sed -e :a -e '/\\$/N; s/\\\n//; ta' Make/options | grep -e "EXE_INC.*=" | sed 's=EXE\_INC.*\=[ ]*==')
FILES_INC=

if [ -n "${EXE_INC}" ]
then
    FILES_INC=$(echo $EXE_INC | \
            sed -e "s/\-I\([a-zA-Z0-9]*\ *\)/\1/g" \
                -e 's/(FOAM_SRC)/FOAM_SRC/g' \
                -e 's/(LIB_SRC)/FOAM_SRC/g' \
                -e 's/(WM_THIRD_PARTY_DIR)/WM_THIRD_PARTY_DIR/g' \
                -e 's/(FOAM_MODULES)/FOAM_MODULES/g' \
                -e 's/\$(.*)//g' \
                | \
            sed -e 's=[ ]=\n=g' -e 's=lnInclude=Make/files=g' | \
            grep -v -e "=" -e "EXE_INC")
fi

# Use only the libraries that we can find
if [ -z "${FILES_INC}" ]
then
    echo "WARNING: Make/options as good as empty."
    exit 0
fi

EXPECTED_LIBS=$(eval 'grep -e "^LIB ="' $FILES_INC | sed -e 's=.*/lib=-l=')

TMP_SCRIPT="Make/options.tmp"

for lib in ${EXPECTED_LIBS}
do

    if ! grep -q -e "${lib}[ \\]*$" Make/options
    then
        echo "    ${lib} \\"
    fi

done > "${TMP_SCRIPT}"

if [ $(cat "${TMP_SCRIPT}" | wc -l) -gt 0 ]
then

    sed -i -e '$ s= \\$==' "${TMP_SCRIPT}"

    echo "Libraries not listed in Make/options and which were expected to exist:"
    cat "${TMP_SCRIPT}"

    echo -e "\nLIB_LIBS += \\" >> Make/options
    cat "${TMP_SCRIPT}" >> Make/options

    echo -e "\nHacked this into the Make/options file for convenience."
    CODE=2

else

    echo "Note: No change required."

fi

rm "${TMP_SCRIPT}"
exit $CODE
