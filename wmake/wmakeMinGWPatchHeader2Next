#!/bin/bash
#------------------------------------------------------------------------------
# License
#
#    Copyright (C) 2024 FS Dynamics Portugal (FSD blueCAPE Lda)
#
#    This file is part of blueCAPE's unofficial mingw patches for OpenFOAM.
#    For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#    This file is a derivative work of OpenFOAM.
#
#    OpenFOAM is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#    for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     wmakeMinGWPatchHeader2Next
#
# Description
#     Script for patching header files that have the same name as others and
#   hence inject a macro that enables telling them apart.
#
# Usage
#     wmakeMinGWPatchHeader2Next <relativeHeaderToHack> <macro_name>
#
#------------------------------------------------------------------------------
Script=${0##*/}

#
# Check environment variables
#
for check in WM_OPTIONS WM_LINK_LANGUAGE WM_DIR WM_PROJECT WM_PROJECT_DIR
do
    eval test "\$$check" || {
        echo "$Script error: environment variable \$$check not set" 1>&2
        exit 1
    }
done

hackThisHeader=$1
headerFileName=$(basename $hackThisHeader)
MACRO_NAME=$2

if ! grep -q -e "$MACRO_NAME" $hackThisHeader
then
    mv $hackThisHeader ${hackThisHeader}.tmp && \
    (
        echo "#ifndef $MACRO_NAME" > $hackThisHeader
        cat ${hackThisHeader}.tmp >> $hackThisHeader
        echo "#else" >> $hackThisHeader
        echo "#include_next \"$headerFileName\"" >> $hackThisHeader
        echo "#endif" >> $hackThisHeader

        rm ${hackThisHeader}.tmp
    )
else
    echo "WARNING: Macro '$MACRO_NAME' already injected into file '$hackThisHeader'"
fi
