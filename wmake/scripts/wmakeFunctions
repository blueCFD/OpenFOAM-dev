#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2015-2016 OpenFOAM Foundation
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# 2016-10-23 blueCAPE Lda: Modifications for blueCFD-Core 2016-2
#------------------------------------------------------------------------------
# License
#     This file is a derivative work of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Modifications
#     This file has been modified by blueCAPE's unofficial mingw patches for
#     OpenFOAM.
#     For more information about these patches, visit:
#         http://bluecfd.com/Core
#
#     Modifications made:
#        - Added shell function fromDepToSource, for retrieving the original
#          file name directly from the .dep file.
#
# Script
#     wmakeFunctions
#
# Description
#     Functions to check wmake environment and find .dep and .o files
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Check environment variables
#------------------------------------------------------------------------------

checkEnv()
{
    for envar in WM_OPTIONS WM_DIR WM_PROJECT_DIR
    do
        eval test "\$$envar" || {
            echo "$Script error: environment variable \$$envar not set" 1>&2
            exit 1
        }
    done
}


#------------------------------------------------------------------------------
# Search up directories tree for the Make sub-directory
#------------------------------------------------------------------------------

expandPath()
{
    if [ -d "$1" ]
    then
        exPath=$(cd "$1" && pwd -P)
    else
        exPath=$(cd $(dirname "$1") && pwd -P)
    fi
}

findTarget()
{
    expandPath $WM_PROJECT_DIR
    wmpdir=$exPath
    expandPath $1

    if [ "$exPath" = "$wmpdir" \
                   -o "$exPath" = "$HOME" \
                   -o "$exPath" = "/" \
       ]
    then
        echo "$Script error: could not find Make directory" 1>&2
        exit 1
    elif [ -d "$1/Make" ]; then
        dir=$1
    else
        findTarget "$1/.."
    fi
}

findObjectDir()
{
    expandPath $WM_PROJECT_DIR
    wmpdir=$exPath
    expandPath $1

    if echo $exPath | grep "$wmpdir" > /dev/null
    then
        platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
        objectsDir=$platformPath$(echo $exPath | sed s%$wmpdir%% )
    else
        path=$exPath
        dir=.
        if [ ! -d Make ]
        then
            findTarget .
        fi
        appDir=$dir
        expandPath $appDir/.
        objectsDir=$appDir/Make/${WM_OPTIONS}$(echo $path | sed s%$exPath%% )
    fi
}

depToSource()
{
    sourceFile=$(echo ${depFile%.dep} | \
        sed -e s%platforms/${WM_OPTIONS}/%% -e s%Make/${WM_OPTIONS}/%% \
            -e s%platforms/${WM_OPTIONS}${WM_MPLIB}/%% \
            -e s%Make/${WM_OPTIONS}${WM_MPLIB}/%% )
}

fromDepToSource()
{
    sourceFileDirect=$(head -n 1 $depFile | \
        sed -e 's=.*:\s*==' -e 's=$(OBJECTS_DIR)='$(dirname $depFile)'=')
}

#------------------------------------------------------------------------------
