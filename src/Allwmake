#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory
allwmakeOptions='-allow-lib makeType' && . $WM_PROJECT_DIR/wmake/scripts/AllwmakeArguments

wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
    echo "Error: Current directory is not \$WM_PROJECT_DIR/src"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}

[ -n "$FOAM_EXT_LIBBIN" ] || {
    echo "Error: FOAM_EXT_LIBBIN not set"
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}

set -x

# update OpenFOAM version strings if required
wmakePrintBuild -check || /bin/rm -f OpenFOAM/Make/*/global.? 2>/dev/null

wmakeLnInclude OpenFOAM
wmakeLnInclude OSspecific/${WM_OSTYPE:-POSIX}

wmakeVersionTag #generate version tag, after OpenFOAM/lnInclude has been created
Pstream/Allwmake $OriginalOptions

OSspecific/${WM_OSTYPE:-POSIX}/Allwmake $*
wmake $makeType OpenFOAM

#in case direct linking isn't to be used, then setup settings for using Pstream library
if isMinGW; then
  export WM_PSTREAMLINK="LINKTOPSTREAM"

  #build all Pstream libraries
  (cd Pstream && ./Allwmake)

  rm -f $FOAM_LIBBIN/libOpenFOAM.*

  wmake $makeType OpenFOAM

  unset WM_PSTREAMLINK

  # mingw excludes default compiler path so copy
  # missing /usr/include/FlexLexer.h for flex
  cp /usr/include/FlexLexer.h "$FOAM_SRC/OpenFOAM/lnInclude/"
  
  #Build the stub library
  wmake libso OSspecific/${WM_OSTYPE:-POSIX}/stubLibrary
fi


wmake $makeType fileFormats
wmake $makeType surfMesh
wmake $makeType triSurface
wmake $makeType meshTools
wmake $makeType edgeMesh

# lagrangian is needed by finiteVolume
wmake $makeType lagrangian/basic

# finiteVolume is needed by the Decomposition methods
wmake $makeType finiteVolume

# Decomposition methods needed by dummyThirdParty
parallel/decompose/AllwmakeLnInclude

if isMinGW; then
  wmake $makeType parallel/decompose/decompositionMethods
fi

# dummyThirdParty (dummy metisDecomp, scotchDecomp etc) needed by e.g. meshTools
dummyThirdParty/Allwmake $OriginalOptions

wmake $makeType lagrangian/distributionModels
wmake $makeType genericPatchFields

# Build the proper scotchDecomp, metisDecomp etc.
parallel/Allwmake $OriginalOptions

renumber/Allwmake $OriginalOptions

wmake $makeType conversion

wmake $makeType sampling

wmake $makeType mesh/extrudeModel

wmake $makeType dynamicMesh
wmake $makeType dynamicFvMesh
wmake $makeType topoChangerFvMesh

wmake $makeType ODE
wmake $makeType randomProcesses

thermophysicalModels/Allwmake $OriginalOptions
transportModels/Allwmake $OriginalOptions
turbulenceModels/Allwmake $OriginalOptions
TurbulenceModels/Allwmake $OriginalOptions

# Depends on RAS/turbulenceModels/compressible
# hence not in thermophysicalModels
wmake $makeType thermophysicalModels/chemistryModel
wmake $makeType thermophysicalModels/solidChemistryModel

wmake $makeType combustionModels
regionModels/Allwmake $OriginalOptions
lagrangian/Allwmake $OriginalOptions
mesh/Allwmake $OriginalOptions

fvAgglomerationMethods/Allwmake $OriginalOptions

wmake $makeType fvMotionSolver
wmake $makeType engine

wmake $makeType fvOptions

wmake $makeType regionCoupled

postProcessing/Allwmake $OriginalOptions

wmake $makeType sixDoFRigidBodyMotion

# ----------------------------------------------------------------- end-of-file
